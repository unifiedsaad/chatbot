import os
from django.contrib import admin
from django.core.files import File
from django.utils.text import slugify

from dataset.forms import GenerateDataFileForm
from dataset.utils.data_file_generator import generate_datafile
from .models import DataFile, GeneratedDataFile


def delete_selected(self, request, queryset):
    for instance in queryset.all():
        instance.delete()


class DataFileAdmin(admin.ModelAdmin):
    list_display = [
        'mnemonic',
        'file',
        'date_time'
    ]

    list_filter = [
        'mnemonic',
        'date_time'
    ]

    exclude = [
        'is_auto_generated',
    ]

    actions = [
        delete_selected
    ]

    def get_queryset(self, request):
        queryset = super(DataFileAdmin, self).get_queryset(request).filter(
            is_auto_generated=False
        )

        return queryset


class AutoGeneratedFileAdmin(admin.ModelAdmin):
    form = GenerateDataFileForm

    list_display = [
        'mnemonic',
        'file',
        'date_time'
    ]

    list_display_links = None

    list_filter = [
        'mnemonic',
        'date_time'
    ]

    actions = [
        delete_selected
    ]

    def get_queryset(self, request):
        queryset = super(AutoGeneratedFileAdmin, self).get_queryset(request).filter(
            is_auto_generated=True
        )

        return queryset

    def save_model(self, request, obj, form, change):
        # Convert line breaks in answer to <br>
        answer_text = form.cleaned_data['answer']
        for line_break in ('\r\n', '\n\r', '\n', '\r'):
            answer_text = answer_text.replace(line_break, '<br>')

        # Generate a file with the given keywords and answers
        file_path = generate_datafile(
            keywords=[
                form.cleaned_data['keywords_1'],
                form.cleaned_data['keywords_2'],
                form.cleaned_data['keywords_3'],
                form.cleaned_data['keywords_4'],
            ],
            answers=[
                answer_text,
            ]
        )

        # Create the object
        data_file_obj = DataFile(
            mnemonic=form.cleaned_data['mnemonic'],
            is_auto_generated=True
        )

        # Save the file under the media path
        f = File(open(file_path))
        data_file_obj.file.save("{}.rive".format(slugify(data_file_obj.mnemonic)), f)
        data_file_obj.save()

        # Remove the temporary file from the file system
        try:
            os.remove(file_path)
        except FileNotFoundError:
            pass


admin.site.register(DataFile, DataFileAdmin)
admin.site.register(GeneratedDataFile, AutoGeneratedFileAdmin)
